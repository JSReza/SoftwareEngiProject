plugins {
    id 'org.springframework.boot' version '3.1.0'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'com.google.protobuf' version '0.9.4'
    id 'java'
}

apply plugin: 'java'
apply plugin: 'eclipse'
eclipse.project.name = 'SoftwareEngiProject' 

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
            srcDirs += ['build/generated/source/proto/main/java', 'build/generated/source/proto/main/grpc']
        }
    }
    test {
        java {
            srcDirs = ['src/test/java']
        }
    }
}

repositories {
    mavenCentral()
}

test {
    useJUnitPlatform() // Explicitly specify the test framework
    dependencies {
        testImplementation 'org.junit.jupiter:junit-jupiter:5.10.2'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.10.2'
        testImplementation 'org.junit.platform:junit-platform-engine:1.10.2'
        testImplementation 'org.junit.platform:junit-platform-commons:1.10.2'
    }

      filter {
        excludeTestsMatching "project.annotations.Assignment*"
      }
}

ext {
    grpcVersion = '1.59.1'
    protobufVersion = '3.25.1'
    protocVersion = protobufVersion
    springBootVersion = '3.1.0'
}

dependencies {
  runtimeOnly "io.grpc:grpc-netty-shaded:${grpcVersion}"
  implementation "io.grpc:grpc-protobuf:${grpcVersion}"
  implementation "io.grpc:grpc-services:${grpcVersion}"
  implementation "io.grpc:grpc-stub:${grpcVersion}"
  compileOnly "org.apache.tomcat:annotations-api:6.0.53"
  testImplementation "io.grpc:grpc-testing:${grpcVersion}"
  testImplementation "io.grpc:grpc-inprocess:${grpcVersion}"
  testImplementation 'org.mockito:mockito-core:5.4.0'
  implementation "org.springframework.boot:spring-boot-starter:${springBootVersion}"
  implementation "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
  testImplementation 'net.bytebuddy:byte-buddy:1.14.6'
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${protocVersion}" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
    }
    generateProtoTasks {
        all().forEach { task ->
            task.plugins {
                grpc {}
            }
        }
    }
}

tasks.named('bootRun') {
    dependsOn 'build'
}

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

tasks.compileJava.dependsOn(tasks.generateProto)

bootJar {
    mainClass = 'com.example.computeengine.ComputeEngineApplication'
}

bootRun {
    mainClass = 'ComputeEngineApplication'
}

tasks.withType(Test) {
    jvmArgs += "-Dnet.bytebuddy.experimental=true"
}

configurations {
    all {
        exclude group: 'io.r2dbc', module: 'r2dbc-spi'
    }
}
